#pragma once
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <inttypes.h>

#include <fcntl.h>
#include <sys/mman.h>
#include <sys/stat.h>

#include <malloc.h>
#include <mcheck.h>

#include <signal.h>

#define MAX_CHUNKS 100
#define MAX_THREADS 12
#define STUB __attribute__((constructor))

int _real_chunk_size(void*ptr);
int _usable_chunk_size(void* ptr);

void* chunkptrs[MAX_CHUNKS+1],*tmp;
int chunkptrs_n = 0,i,j;

int arg1=1337,arg2=1337;

void* handle(void* arg);
void n(int sig);
int parse(const char* cmd);

const char* options[] = {
    "malloc",   /* allocate chunks */
    "free",     /* free chunks based on index */
    "freeall",  /* frees all chunks */
    "edit",     /* edit a chunk by pointer or index, you may also edit metadata */
    "read",     /* read any number of bytes from a chunk idx */
    "usable",   /* usable chunk size, must supply index or address, else will use newest chunks */
    "real",     /* real chunk size including metadata, same as "usable" */
    "chunks",   /* chunk info, metadata & bit flags, chunk size, if freed.*/
    "exit",
    0
};
